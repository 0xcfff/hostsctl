name: CI

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]

env:
  GO_VERSION: 1.20

jobs:

  test:
    name: test
    runs-on: "${{matrix.os}}"
    strategy:
      matrix:
        os: [ubuntu-latest]
    defaults:
      run:
        shell: bash
        
    steps:
      # step 1: Set up go
      - name: Set up Go ${{ env.GO_VERSION }}
        uses: actions/setup-go@v1
        with:
          go-version: ${{ env.GO_VERSION }}
      
      # step 2: Checkout repository code
      - name: Checkout code
        uses: actions/checkout@v3

      # step 3: Create output folder
      - name: Create output folder
        run: mkdir -p out/coverage

      # step 2: Install tools
      - name: Install tools
        run: |
          export GOPATH="$HOME/go/"
          export PATH=$PATH:$GOPATH/bin
          go install github.com/gotesttools/gotestfmt/v2/cmd/gotestfmt@latest

      # step 5: Install dependencies
      - name: Download dependencies
        run: go mod download

      # step 6: Build
      - name: Build
        run: go build -o out/bin/hostsctl ./cmd/hostsctl 

      # step 7: Test
      - name: Test
        run: go test -json -v -coverprofile=coverage-${{ matrix.os }}.txt ./... 2>&1 | gotestfmt

      # step 8: Upload results
      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: coverage-${{ matrix.os }}
          path: coverage-${{ matrix.os }}.txt
      
      # # step 7: Calculate coverage

      # go get code.google.com/p/go.tools/cmd/cover
      # go get github.com/t-yuki/gocover-cobertura

      # - name: Convert go coverage to corbetura format
      #   run: gocover-cobertura < coverage.txt > coverage.xml

  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: [test]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

    

